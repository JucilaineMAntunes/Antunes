master-2659-ajustar-textoSimNao-qdo-tem-paginacao

old
master-2659-ajustarTextoColunaAtivoEmPaginaDeConsoles

juci acho q pageLengh ------------------------

app.js

$('#example').dataTable( {
  "pageLength": 50
} );

--------------------------------------

Print tela paginacao

Antes

CONSOLES.TS

        function loadAccessGroups(consoleGuid?, accessByAccessGroups?) {
            let accessGroupsWithAccess = $('#accessGroupsWithAccess');
            accessGroupsWithAccess.html("");

            $.ajax('/api/access-groups', {
                method: 'GET',
                contentType: 'application/json',
                success: function (data) {
                    data.forEach(function (accessGroup) {
                        let div = "<div class=\"form-check\"><input class=\"form-check-input access-groups-check\" type=\"checkbox\" data-access-group-guid=\"" + accessGroup.guid + "\" data-access-group-name=\"" + accessGroup.name + "\" id=\"access_group_" + accessGroup.guid + "\"><label class=\"form-check-label\" for=\"access_group_" + accessGroup.guid + "\">" + accessGroup.name + "</label></div>";
                        accessGroupsWithAccess.append(div);
                    });

                    if (consoleGuid && accessByAccessGroups) {
                        $.ajax('/api/accessGroups/' + consoleGuid, {
                            method: 'GET',
                            contentType: 'application/json',
                            success: function (accessGroups) {
                                accessGroups.forEach(function (item) {
                                    $('#access_group_' + item.accessGroupGuid).prop('checked', true);
                                });
                            }
                        });
                    }
                }
            });
        }

//JUCI ACRESTOU CHAMADA
dataTable.on('draw', showYesNoTranslationOnPagination);

------------------------------------APP.TS------------------------

------------------------------antes--------------------------------------
export function dataTableRenderBoolean(data, type, row) {
        if (type === 'display' || type === 'filter') {
            if (data) {
                if (!booleanTextYesRead) {
                    loadYesTranslations();
                }
                return `<svg height="24" width="24"><use xlink:href="#icon-checked"></use></svg>&nbsp;<span class="booleanTrue">` + booleanTextYes + `</span>`;
            }  else {
                if (!booleanTextdNoRead) {
                    loadNoTranslations();
                }
                return `<svg height="24" width="24"><use xlink:href="#icon-unchecked"></use></svg>&nbsp;<span class="booleanFalse">` + booleanTextNo + `</span>`;
            }
        }
        return data;
    }

-------------------------------------depois-----------------------------
 export function dataTableRenderBoolean(data, type, row) {
        if (type === 'display' || type === 'filter') {
            if (data) {
                //if (!booleanTextYesRead) {
                //    loadYesTranslations();
                //}
                return `<svg height="24" width="24"><use xlink:href="#icon-checked"></use></svg>&nbsp;<span class="booleanTrue">` + booleanTextYes + `</span>`;
            }  else {
                //if (!booleanTextdNoRead) {
                //    loadNoTranslations();
                //}
                return `<svg height="24" width="24"><use xlink:href="#icon-unchecked"></use></svg>&nbsp;<span class="booleanFalse">` + booleanTextNo + `</span>`;
            }
        }
        return data;
    }
    

=====================================datatables=================================
 $(function () {
        let dataTable = $('#consoles').DataTable(<any>{
            rowReorder: true,
            ajax: {
                url: '/api/consoles',
                dataSrc: ''
            },
            pageLength : 2,            
            language: { url: '/api/resources/resources.json' },
            dom: "<'row mb-3'<'col'B>>" +
                "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
            columns: [
                {
                    data: 'active', searchable: false, render: dataTableRenderBoolean
                },
                {
                    data: 'consoleType', render: function (data, _, __, meta) {
                        let api = new $.fn.dataTable.Api(meta.settings)
                        switch (data) {
                            case "Dispatch": return api.i18n('ConsoleType_Dispatch', data);
                            case "Radar": return api.i18n('ConsoleType_Radar', data);
                        }
                        return data;
                    }
                },
                { data: 'alias' },
                { data: 'serialNumber' }
            ],
            order: [[0, 'desc'], [2, 'asc']],
            select: {
                style: 'os'
            },
            responsive: {
                breakpoints: [
                    { name: 'xl', width: Infinity },
                    { name: 'lg', width: 1200 },
                    { name: 'md', width: 992 },
                    { name: 'sm', width: 768 },
                    { name: 'xs', width: 576 }
                ]
            },
            buttons: [
                {
                    extend: 'selectedSingle',
                    text: function (dt: DataTables.Api) { return dt.i18n('Change', 'Change'); },
                    action: function (_, dt: DataTables.Api) {
                        $('form').prop('action', '/api/consoles/update').find('.invalid-feedback, .alert').hide();
                        let record = <any>dt.row({ selected: true }).data();
                        $('#active').prop('checked', record.active);
                        $('#consoleType').val(record.consoleType);
                        $('#alias').val(record.alias);
                        $('#ipAddress').val(record.ipAddress);
                        $('#serialNumber').val(record.serialNumber);
                        $('#remarks').val(record.remarks);
                        $('#hardwareId').val(record.hardwareId);
                        $('#codec').val(record.codec);
                        $('#audioOutputAddressType').val(record.audioOutputAddressType);
                        $('#audioOutputAddress').val(record.audioOutputAddress);
                        $('#updaterEnabled').prop('checked', record.updaterEnabled);
                        $('#updaterPort').val(record.updaterPort);

                        loadAccessGroups(record.guid, record.accessByAccessGroups);
                        $('#accessByAccessGroups').prop('checked', record.accessByAccessGroups);
                        accessByAccessGroups = record.accessByAccessGroups;

                        loadPhoneAccounts(record.guid);
                        loadPostAccounts(record.guid);

                        let label = $('#consoleModalLabel');
                        label.text(label.data('label-change'));
                        $('#consoleModal').modal('show');

                        $('#btnSaveConsole').prop("disabled", true);
                    }
                },
                {
                    extend: 'selected',
                    text: function (dt: DataTables.Api) { return dt.i18n('Delete', 'Delete'); },
                    action: function () {
                        $('#confirmModal').modal('show');
                    }
                }
            ]
        });

