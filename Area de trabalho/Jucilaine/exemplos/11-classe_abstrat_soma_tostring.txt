using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;
using Course6.Entities;

namespace Course6
{
    class Program
    {
        static void Main(string[] args)
        {
            List<TaxPayer> list = new List<TaxPayer>();

            Console.Write("Enter the number of tax payers: ");
            int n = int.Parse(Console.ReadLine());

            for (int i = 1; i <= n; i++)
            {
                Console.WriteLine($"Tax payer #{i} date: ");
                Console.Write("Individual or company (i/c)?: ");
                string type = Console.ReadLine();
                Console.Write("Name: ");
                string name = Console.ReadLine();
                Console.Write("Anual income: ");
                double income = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture);
                if (type == "i")
                {
                    Console.Write("Heath expenditures: ");
                    double heath = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture);
                    list.Add(new Individual(name, income, heath));
                }
                else
                {
                    Console.Write("Number of employees: ");
                    int employees = int.Parse(Console.ReadLine());
                    list.Add(new Company(name, income, employees));
                }

            }


            double sum = 0.0;

            Console.WriteLine("");
            Console.WriteLine("TAXES PAID:");

            foreach (TaxPayer tp in list)
            {
                double tax = tp.Taxas();


                Console.WriteLine(tp.Name
                    + ": $"
                    + tax.ToString("f2", CultureInfo.InvariantCulture));

                sum += tax;
            }

            {
                Console.WriteLine("");
                Console.WriteLine("TOTAL TAXES: $"
                        + sum.ToString("f2", CultureInfo.InvariantCulture));

            }
        }
    }
}
====================================company====================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Course6.Entities
{
    class Company : TaxPayer
    {
        public int NumberOfEmployee { get; set; }

        public Company (string name, double anualIncome, int numberOfEmployee)
             : base(name, anualIncome)

        {
            NumberOfEmployee = numberOfEmployee;
        }

        public override double Taxas()
        {
            if ( NumberOfEmployee > 10 )
            {

                return AnualIncome * 0.14;
            }
            else
            {
                return AnualIncome * 0.16;
            }
        }
    }
}
 =====================individual=====================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Course6.Entities
{
    class Individual : TaxPayer
    {
        public double HealthExpenditurs { get; set; }

        public Individual(string name, double anualIncome, double healthExpenditurs)
            : base(name, anualIncome)
        {

            HealthExpenditurs = healthExpenditurs;

        }

        public override double Taxas()
        {
            if (AnualIncome < 20000)
            {
                return AnualIncome * 0.15 - HealthExpenditurs * 0.5;

            }
            else
            {
                  return AnualIncome * 0.25 - HealthExpenditurs * 0.5;
            }
                
                }

            }
        }
================TaxPayer=================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Course6.Entities
{
    abstract class TaxPayer
    {
        public String Name { get; set; }
        public double AnualIncome { get; set; }


        public TaxPayer(string name, double anualIncome)
        {
            Name = name;
            AnualIncome = anualIncome;
        }

        public abstract double Taxas();
    }
}
