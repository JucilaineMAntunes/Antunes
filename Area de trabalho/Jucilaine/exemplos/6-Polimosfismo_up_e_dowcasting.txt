https://github.com/acenelio/inheritance2-csharp

using System;

using Course.Entities;



namespace Course

{

    class Program

    {

        static void Main(string[] args)

        {

            Account acc = new Account(1001, "Alex", 0.0);

            BusinessAccount bacc = new BusinessAccount(1002, "Maria", 0.0, 500.0);



            // UPCASTING



            Account acc1 = bacc;

            Account acc2 = new BusinessAccount(1003, "Bob", 0.0, 200.0);

            Account acc3 = new SavingsAccount(1004, "Anna", 0.0, 0.01);



            // DOWNCASTING



            BusinessAccount acc4 = (BusinessAccount)acc2;

            acc4.Loan(100.0);



            // BusinessAccount acc5 = (BusinessAccount)acc3;

            if (acc3 is BusinessAccount) {

               Dois tipos de Casting
                //BusinessAccount acc5 = (BusinessAccount)acc3; 

                BusinessAccount acc5 = acc3 as BusinessAccount;

                acc5.Loan(200.0);

                Console.WriteLine("Loan!");

            }



            if (acc3 is SavingsAccount) {

                //SavingsAccount acc5 = (SavingsAccount)acc3;

                SavingsAccount acc5 = acc3 as SavingsAccount;

                acc5.UpdateBalance();

                Console.WriteLine("Update!");

            }

        }

    }

}
=============================dentro de Entities ===================================
=============================Account.cs===================================
namespace Course.Entities

{

    class Account

    {

        public int Number { get; private set; }

        public string Holder { get; private set; }

        public double Balance { get; protected set; }



        public Account()

        {

        }



        public Account(int number, string holder, double balance)

        {

            Number = number;

            Holder = holder;

            Balance = balance;

        }



        public void Withdraw(double amount)

        {

            Balance -= amount;

        }



        public void Deposit(double amount)

        {

            Balance += amount;

        }

    }

}
=============================BusinessAccount.cs===================================
namespace Course.Entities

{

    class BusinessAccount : Account

    {

        public double LoanLimit { get; set; }



        public BusinessAccount()

        {

        }



        public BusinessAccount(int number, string holder, double balance, double loanLimit) 

            : base(number, holder, balance)

        {

            LoanLimit = loanLimit;

        }



        public void Loan(double amount)

        {

            if (amount <= LoanLimit)

            {

                Balance += amount;

            }

        }

    }

}
=============================SavingsAccount.cs===================================
namespace Course.Entities

{

    class SavingsAccount : Account

    {

        public double InterestRate { get; set; }



        public SavingsAccount()

        {

        }



        public SavingsAccount(int number, string holder, double balance, double interestRate)

            : base(number, holder, balance)

        {

            InterestRate = interestRate;

        }



        public void UpdateBalance()

        {

            Balance += Balance * InterestRate;

        }

    }

}
