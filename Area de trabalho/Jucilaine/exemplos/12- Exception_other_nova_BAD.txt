https://github.com/acenelio/exceptions1-csharp/blob/5071db3a59111c34885d50eeef6c764b0e8f93ff/Course/Program.cs


===============================EXEMPLO BAD======================
================================================================ Program ================================================================
using System;

using Course.Entities;



namespace Course {

    class Program {

        static void Main(string[] args) {



            Console.Write("Room number: ");

            int number = int.Parse(Console.ReadLine());

            Console.Write("Check-in date (dd/MM/yyyy): ");

            DateTime checkIn = DateTime.Parse(Console.ReadLine());

            Console.Write("Check-out date (dd/MM/yyyy): ");

            DateTime checkOut = DateTime.Parse(Console.ReadLine());



            if (checkOut <= checkIn) {

                Console.WriteLine("Error in reservation: Check-out date must be after check-in date");

            }

            else {

                Reservation reservation = new Reservation(number, checkIn, checkOut);

                Console.WriteLine("Reservation: " + reservation);



                Console.WriteLine();

                Console.WriteLine("Enter data to update the reservation:");

                Console.Write("Check-in date (dd/MM/yyyy): ");

                checkIn = DateTime.Parse(Console.ReadLine());

                Console.Write("Check-out date (dd/MM/yyyy): ");

                checkOut = DateTime.Parse(Console.ReadLine());



                String error = reservation.UpdateDates(checkIn, checkOut);

                if (error != null) {

                    Console.WriteLine("Error in reservation: " + error);

                }

                else {

                    Console.WriteLine("Reservation: " + reservation);

                }

            }

        }

    }

}
================================================================ Entities/Reservation.cs ================================================================
uusing System;



namespace Course.Entities {

    class Reservation {



        public int RoomNumber { get; set; }

        public DateTime CheckIn { get; set; }

        public DateTime CheckOut { get; set; }



        public Reservation() {

        }



        public Reservation(int roomNumber, DateTime checkIn, DateTime checkOut) {

            RoomNumber = roomNumber;

            CheckIn = checkIn;

            CheckOut = checkOut;

        }



        public double Duration() {

            TimeSpan duration = CheckOut.Subtract(CheckIn);

            return (int)duration.TotalDays;

        }



        public string UpdateDates(DateTime checkIn, DateTime checkOut) {



            DateTime now = DateTime.Now;

            if (checkIn < now || checkOut < now) {

                return "Reservation dates for update must be future dates";

            }

            else if (checkOut <= checkIn) {

                return "Check-out date must be after check-in date";

            }



            CheckIn = checkIn;

            CheckOut = checkOut;

            return null;

        }



        public override string ToString() {

            return "Room "

                + RoomNumber

                + ", check-in: "

                + CheckIn.ToString("dd/MM/yyyy")

                + ", check-out: "

                + CheckOut.ToString("dd/MM/yyyy")

                + ", "

                + Duration()

                + " nights";

        }

    }

}
