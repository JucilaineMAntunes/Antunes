
https://github.com/acenelio/composition3-csharp/blob/master/Course/Program.cs
=========program===================


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Course3.Entities;
using Course3.Entities.Enums;
using System.Globalization;


namespace Course3
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter client date:");

            Console.Write("Name:");
            string name = Console.ReadLine();
            Console.Write("Email:");
            string email = Console.ReadLine();
            Console.Write("Birth date (DD/MM/YYYY): ");
            DateTime birthDate = DateTime.Parse(Console.ReadLine());
            Console.WriteLine("Enter order date:");
            Console.Write("Status:");
            OrderStatus status = OrderStatus.Processing;

            //OrderStatus status = Enum.Parse<OrderStatus>Console.ReadLine();

            Client client = new Client(name, email, birthDate);                  
            Order order = new Order(DateTime.Now, status, client);
            
            Console.Write("How many items to this order?");
            int n = int.Parse(Console.ReadLine());

            for (int i=1; i<=n; i++)
            {
                Console.WriteLine($"Enter #{i} item data:");                
                Console.Write("Product name:");
                string namep = Console.ReadLine();
                Console.Write("Product price:");
                double price = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture);

                Product product = new Product(namep, price);

                Console.Write("Quantity:");
                int quantity = int.Parse(Console.ReadLine());

                OrdemItem ordemItem = new OrdemItem(quantity, price, product);

                order.AddItem(ordemItem);                                
            }

            Console.WriteLine();

            Console.WriteLine("ORDER SUMMARY:");

            Console.WriteLine(order);

        }
    }
}

=======dentro de entities ====================
====================Order================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Course3.Entities.Enums;

namespace Course3.Entities
{
    class Order
    {
        public DateTime Moment { get; set; }
        public OrderStatus Status { get; set; }
        public Client Client { get; set; }
        public List<OrdemItem> Itens { get; set; } = new List<OrdemItem>();


        public Order()
        {

        }

        public Order(DateTime moment, OrderStatus status, Client client)
        {
            Moment = moment;
            Status = status;
            Client = client;
        }

        public void AddItem(OrdemItem item)
        {
            Itens.Add(item);
        }

        public void RemoveItem(OrdemItem item)
        {
            Itens.Remove(item);
        }


        public override string ToString()
        {
            StringBuilder it = new StringBuilder();

            it.AppendLine("Order Moment:" + Moment.ToString("dd/MM/yyyy HH:mm:ss"));
            it.AppendLine("Order status: " + Status);
            it.AppendLine("Cliente: " + Client);
            it.AppendLine("Order itens: ");

            foreach (OrdemItem i in Itens)
            {
                it.Append(i.ToString());
            }

            return it.ToString();
        }


    }
}


====================Client================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Course3.Entities
{
    class Client
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public DateTime BirthDate { get; set; }

        public Client()
        {

        }

        public Client(string name, string email, DateTime birthDate)
        {
            Name = name;
            Email = email;
            BirthDate = birthDate;
        }

        public override string ToString()

        {

            return Name

                + ", ("

                + BirthDate.ToString("dd/MM/yyyy")

                + ") - "

                + Email;

        }

    }
}

====================OrderItem================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Globalization;

namespace Course3.Entities
{
    class OrdemItem
    {

        public int Quantity { get; set; }
        public double Price { get; set; }
        public Product Product { get; set; }

        public OrdemItem()
        {

        }

        public OrdemItem(int quantity, double price, Product product)
        {
            Quantity = quantity;
            Price = price;
            Product = product;
        }

        public double SubTotal()
        {
            return Quantity * Price;
        }

        public override string ToString()
        {
            return Product.Name
                + ", $"
                + Price.ToString("f2", CultureInfo.InvariantCulture)
            + ", Quantity: "
                + Quantity
                + " Subtotal: $"
                + SubTotal().ToString("f2", CultureInfo.InvariantCulture);
        }

    }
}

====================Product================

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Course3.Entities
{
    class Product
    {
        public string Name { get; set; }
        public double Price { get; set; }

        public Product()
        {

        }

        public Product(string name, double price)
        {
            Name = name;
            Price = price;
        }
    }
}

=============dentro de entities Enums========================
==============OrderStatus===================
namespace Course3.Entities.Enums
{
    enum OrderStatus : int
    {
        Pending_Payment = 0,
        Processing = 1,
        Shipped =2,
        Delivered = 3
    }
}

