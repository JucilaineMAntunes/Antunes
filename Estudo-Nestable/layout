   expandBtnHTML: '<button data-action="expand" type="button">Expand</button>',
                collapseBtnHTML: '<button data-action="collapse" type="button">Collapse</button>',
                expandBtnHTML: '<div data-action="collapse" class="seta-1"> Collapse</div>',
				
				
				
				
				
				
				
				
				
				@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Remota.WebConfig.Models.RadioNetworkStatusModel>
@{
    ViewBag.Path = new[] { Text.WebResources.ServerStatus };
    ViewBag.Title = @Text.WebResources.RadioNetworks;
    ViewBag.FormAction = "/web/radio-networks-status";
    Layout = "_Layout.cshtml";
}
@using System.Linq;
@using Remota.WebConfig;
@section Script {
    <script src="~/Content/scripts/radio-networks-status.js" defer></script>

    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/styles/radio-networks-status.css")" />


<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
      rel="stylesheet">

<script src="jquery.nestable.js"></script>
<script>

    $(document).ready(function () {

        var updateOutput = function (e) {
            var list = e.length ? e : $(e.target),
                output = list.data('output');
            if (window.JSON) {
                output.val(window.JSON.stringify(list.nestable('serialize')));//, null, 2));
                //output.val(window.JSON.stringify(list.nestable('serialize')), null, 2);
            } else {
                output.val('JSON browser support required for this demo.');
            }
        };

        // activate Nestable for list 1
        $('#nestable').nestable({
            group: 1
        })
            .on('change', updateOutput);

        // activate Nestable for list 2
        $('#nestable2').nestable({
            group: 1
        })
            .on('change', updateOutput);

        // output initial serialised data
        updateOutput($('#nestable').data('output', $('#nestable-output')));
        updateOutput($('#nestable2').data('output', $('#nestable2-output')));

        $('#nestable-menu').on('click', function (e) {
            var target = $(e.target),
                action = target.data('action');
            if (action === 'expand-all') {
                $('.dd').nestable('expandAll');
            }
            if (action === 'collapse-all') {
                $('.dd').nestable('collapseAll');
            }
        });

        $('#nestable3').nestable();

    });
</script>
<body>
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark my-3">
        <!-- Formulario -->
        <form class="col-12">
            <div class="marcador col-6"> </div>
            <div class="marcador col-4 justify-content-end"><input type="text" class="form-control" placeholder="pesquisar...."> </div>
        </form>
    </nav>

    <div class="container marcador-container  m-5">
        <div class="row marcador">
            <ul class="col justify-content-between">
                <!-- style="border:1px solid yellow"-->
                @foreach (var group in Model.StationGroups.OrderBy(x => x.Title).Take(10))
                {
                    <li class="list-group-item">
                        <!-- style="border:1px solid green"-->
                        <div class="col-5 marcador d-flex justify-content-between">
                            <div class="marcador col-10 ">
                                @group.Type
                                <div class="col-5">
                                    <div class="col-5"> @group.Details</div>
                                </div>
                            </div>
                            <div class="col-2 justify-content-end"> @group.Status &#9776; </div>
                        </div>
                    </li>

                    @foreach (var station in group.Stations.OrderBy(x => x.Title).Take(10))
                    {
                        <li class="col-10 offset-1 list-group-item mb-2">
                            <!-- border:1px solid red-->
                            <div class="row justify-content-end caixa d-flex justify-content-between">
                                <div class="col-5" style="text-transform: uppercase; justify-content-between">
                                    @station.Title

                                    <div style="text-transform: uppercase; font-size:small">
                                        @station.Details
                                    </div>
                                </div>
                                <div class="align-self-center justify-content-end col-5">@station.Status</div>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>


    <div class="dd" id="nestable2">        
        <ol class="dd-list" id="first">
            @foreach (var group in Model.StationGroups.OrderBy(x => x.Title).Take(10))
            {
                <li class="dd-item" data-id="15" id="first-a">
                    <div class="dd-handle container marcador-container" id="first-b">
                        <div class="row justify-content-between" id="first-c">
                            <div class="col-7">
                                @group.Type
                                <div>
                                    <div style="font-size:small"> @group.Details</div>
                                </div>
                            </div>
                            <div class="col-5" id="first-d"> @group.Status &#9776; </div>
                        </div>

                    </div>
                    <ol class="dd-list" id="second">
                        @foreach (var station in group.Stations.OrderBy(x => x.Title).Take(10))
                        {
                            <li class="dd-item" data-id="16" id="second-a">
                                <div class="dd-handle container marcador-container" id="second-b">
                                    <div class="row justify-content-between" id="second-c">
                                        <div class="col-5">
                                            @station.Title
                                            <div style="font-size:small">
                                                @station.Details
                                            </div>
                                        </div>
                                        <div class="col-5" id="second-d">@station.Status</div>
                                    </div>

                                </div>
                            </li>

                        }

                    </ol>
                </li>
            }
        </ol>
    </div>
 


    <script type="text/javascript">

        ; (function ($, window, document, undefined) {
            var hasTouch = 'ontouchstart' in document;

            var defaults = {
                listNodeName: 'ol',
                itemNodeName: 'li',
                rootClass: 'dd',
                listClass: 'dd-list',
                itemClass: 'dd-item',
                dragClass: 'dd-dragel',
                handleClass: 'dd-handle',
                collapsedClass: 'dd-collapsed',
                placeClass: 'dd-placeholder',
                noDragClass: 'dd-nodrag',
                emptyClass: 'dd-empty',
                expandBtnHTML: '<button data-action="expand" type="button">Expand</button>',
                collapseBtnHTML: '<button data-action="collapse" type="button">Collapse</button>',
                group: 0,
                maxDepth: 5,
                threshold: 20
            };

            function Plugin(element, options) {
                this.w = $(document);
                this.el = $(element);
                this.options = $.extend({}, defaults, options);
                this.init();
            }/*mostra + e -*/

            Plugin.prototype = {

                init: function () {
                    var list = this;

                    list.reset();

                    list.el.data('nestable-group', this.options.group);

                    list.placeEl = $('<div class="' + list.options.placeClass + '"/>');

                    $.each(this.el.find(list.options.itemNodeName), function (k, el) {
                        list.setParent($(el));
                    });

                    list.el.on('click', 'button', function (e) {
                        if (list.dragEl) {
                            return;
                        }
                        var target = $(e.currentTarget),
                            action = target.data('action'),
                            item = target.parent(list.options.itemNodeName);
                        if (action === 'collapse') {
                            list.collapseItem(item);
                        }
                        if (action === 'expand') {
                            list.expandItem(item);
                        }
                    });

                    var onStartEvent = function (e) {
                        var handle = $(e.target);
                        if (!handle.hasClass(list.options.handleClass)) {
                            if (handle.closest('.' + list.options.noDragClass).length) {
                                return;
                            }
                            handle = handle.closest('.' + list.options.handleClass);
                        }

                        if (!handle.length || list.dragEl) {
                            return;
                        }

                        list.isTouch = /^touch/.test(e.type);
                        if (list.isTouch && e.touches.length !== 1) {
                            return;
                        }

                        e.preventDefault();
                        list.dragStart(e.touches ? e.touches[0] : e);
                    };

                    var onMoveEvent = function (e) {
                        if (list.dragEl) {
                            e.preventDefault();
                            list.dragMove(e.touches ? e.touches[0] : e);
                        }
                    };

                    var onEndEvent = function (e) {
                        if (list.dragEl) {
                            e.preventDefault();
                            list.dragStop(e.touches ? e.touches[0] : e);
                        }
                    };

                    if (hasTouch) {
                        list.el[0].addEventListener('touchstart', onStartEvent, false);
                        window.addEventListener('touchmove', onMoveEvent, false);
                        window.addEventListener('touchend', onEndEvent, false);
                        window.addEventListener('touchcancel', onEndEvent, false);
                    }

                    list.el.on('mousedown', onStartEvent);
                    list.w.on('mousemove', onMoveEvent);
                    list.w.on('mouseup', onEndEvent);

                },

                serialize: function () {
                    var data,
                        depth = 0,
                        list = this;
                    step = function (level, depth) {
                        var array = [],
                            items = level.children(list.options.itemNodeName);
                        items.each(function () {
                            var li = $(this),
                                item = $.extend({}, li.data()),
                                sub = li.children(list.options.listNodeName);
                            if (sub.length) {
                                item.children = step(sub, depth + 1);
                            }
                            array.push(item);
                        });
                        return array;
                    };
                    data = step(list.el.find(list.options.listNodeName).first(), depth);
                    return data;
                },

                serialise: function () {
                    return this.serialize();
                },

                reset: function () {
                    this.mouse = {
                        offsetX: 0,
                        offsetY: 0,
                        startX: 0,
                        startY: 0,
                        lastX: 0,
                        lastY: 0,
                        nowX: 0,
                        nowY: 0,
                        distX: 0,
                        distY: 0,
                        dirAx: 0,
                        dirX: 0,
                        dirY: 0,
                        lastDirX: 0,
                        lastDirY: 0,
                        distAxX: 0,
                        distAxY: 0
                    };
                    this.isTouch = false;
                    this.moving = false;
                    this.dragEl = null;
                    this.dragRootEl = null;
                    this.dragDepth = 0;
                    this.hasNewRoot = false;
                    this.pointEl = null;
                },

                expandItem: function (li) {
                    li.removeClass(this.options.collapsedClass);
                    li.children('[data-action="expand"]').hide();
                    li.children('[data-action="collapse"]').show();
                    li.children(this.options.listNodeName).show();
                },

                collapseItem: function (li) {
                    var lists = li.children(this.options.listNodeName);
                    if (lists.length) {
                        li.addClass(this.options.collapsedClass);
                        li.children('[data-action="collapse"]').hide();
                        li.children('[data-action="expand"]').show();
                        li.children(this.options.listNodeName).hide();
                    }
                },

                expandAll: function () {
                    var list = this;
                    list.el.find(list.options.itemNodeName).each(function () {
                        list.expandItem($(this));
                    });
                },

                collapseAll: function () {
                    var list = this;
                    list.el.find(list.options.itemNodeName).each(function () {
                        list.collapseItem($(this));
                    });
                },
                /*Tambem faz desaparecer o + e -*/
                setParent: function (li) {
                    if (li.children(this.options.listNodeName).length) {
                        li.prepend($(this.options.expandBtnHTML));
                        li.prepend($(this.options.collapseBtnHTML));
                    }
                    li.children('[data-action="expand"]').hide();
                },

                unsetParent: function (li) {
                    li.removeClass(this.options.collapsedClass);
                    li.children('[data-action]').remove();
                    li.children(this.options.listNodeName).remove();
                },

                dragMove: function (e) {
                    var list, parent, prev, next, depth,
                        opt = this.options,
                        mouse = this.mouse;

                    this.dragEl.css({
                        'left': e.pageX - mouse.offsetX,
                        'top': e.pageY - mouse.offsetY
                    });
                }

            };

            $.fn.nestable = function (params) {
                var lists = this,
                    retval = this;

                lists.each(function () {
                    var plugin = $(this).data("nestable");

                    if (!plugin) {
                        $(this).data("nestable", new Plugin(this, params));
                        $(this).data("nestable-id", new Date().getTime());
                    } else {
                        if (typeof params === 'string' && typeof plugin[params] === 'function') {
                            retval = plugin[params]();
                        }
                    }
                });

                return retval || lists;
            };

        })(window.jQuery || window.Zepto, window, document);
    </script>


</body>
