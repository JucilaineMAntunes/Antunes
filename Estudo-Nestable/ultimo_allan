namespace App {

    let stationGroups: any = [];

    function loadRadioNetworks() {
        let LoadFieldsRadioNetworks = $('#LoadFieldsRadioNetworks');
        LoadFieldsRadioNetworks.html("");
        $.ajax('/api/status-radio-networks', {
            method: 'GET',
            contentType: 'application/json',
            success: function (data) {
                stationGroups = data;
                              
                drawContent(stationGroups);
            }
        });
    }

    function drawContent(stationGroups) {
        $("#radio-networks").html("");

        let nestableConfigs = {
            expandBtnHTML: '',
            collapseBtnHTML: ''
        };

        var html = '';
        html += '<ol class="dd-list">';

        stationGroups.forEach(function (stationGroup) {             


            html += `<li class="dd-item dd3-item stationGroup" id="station-group-${stationGroup.guid}">`;            
            html += `<div class='dd-handle stationGroup-color'>`;            
            html += '<div class="row justify-content-between stationGroup-content">';
            html += `<div class="col-6 stationGroup-type">${stationGroup.type}`;
            html += '<div>';
            html += `<div class="stationGroup-details">${stationGroup.details}</div>`;
            html += '</div>';
            html += '</div>';            
            html += `<div class="col-5 stationGroup-status" data-status="${stationGroup.status}"> ${stationGroup.status}`;
            html += '</div>';            
            html += '</div>';
            html += '</div>';      


            html += buildItem(stationGroup);
            html += '</li>';

            
        });
        html += '</ol>';

        $("#radio-networks").append(html); 

        $('.stationGroup-status').each(function () {
            let status = $(this).data("status");
            changeColor(status, $(this).parents('.stationGroup-color'), this);
        });

        $('.station-status').each(function () {
            let status = $(this).data("status");
            changeColor(status, $(this).parents('.station-color'), this);
        });

        $('.dd3-item').on('click', function () {
            if ($(this).hasClass('dd-collapsed')) {
                $(this).removeClass('dd-collapsed');
            }
            else {
                $(this).addClass('dd-collapsed');
            }
        });

        //VocÃª desativa todos os eventos de ponteiro, exceto o recolhimento.
       /* $('#nestable02').nestable({ maxDepth: 1 });  */
    }

    function buildItem(item) {
        var html = '';

        if (item.stations) {           

            html += '<ol class="dd-list">';

            $.each(item.stations, function (index, sub) {                

                html += `<li class="dd-item dd3-item station" id="station-${sub.guid}" >`;
                html += `<div class="dd-handle station-color">`;                
                html += '<div class="row justify-content-between station-content">';
                html += `<div class="col-6 station-title">${sub.title}`;
                html += '<div>';
                html += `<div class="station-details">${sub.details}</div>`;
                html += '</div>';
                html += '</div>';
                html += `<div class="col-5 station-status" data-status="${sub.status}"> ${sub.status}</div>`;
                html += '</div>';
                html += '</div>';
                html += '</li>';

                changeColor(sub.status, '.station-color', '.station-status');
            });

            html += '</ol>';
        }
        return html;
    }

    loadRadioNetworks();

    function changeColor(status, colorSelector, statusSelector) {
        let color = status === 'Offline' ? `#B70A0A` : `#60B70A`;

        $(colorSelector).css('border-left-color', color);  
        $(statusSelector).css('color', color);    
    }


    $('#search').on('keyup', search);

    
    function search() {

        let filteredStationGroups: any = [];
        let search = $("#search").val();
        let data = stationGroups;
        // filtrar conforme o texto digitado

        filteredStationGroups = data.filter(filter(search));


        /*var teste = data.filter(function (item) {
            return item.details.indexOf(search) > -1;
        });
        teste.

        alert(teste);*/
        

        //drawContent(filteredStationGroups);
        drawContent(filteredStationGroups);

    }

    function filter(search) {
        return function (item) {
            return item.title.indexOf(search) > -1 || item.details.indexOf(search) > -1 || item.type.indexOf(search) > -1 || item.status.indexOf(search) > -1;
        }

        // filteredStationGroups vai ter somente os itens que equivalem a busca
        
    }

       
       /*function filter2(search) {
            return function (item) {
                return item.title.indexOf(search) > -1 || item.details.indexOf(search) > -1 || (item.type !== undefined && item.type.indexOf(search) > -1) || item.status.indexOf(search) > -1 || item.stations.filter(filter2(search));
            }
        }
        
         let filtered = data.filter2(filter('BASE'));
         let filtered = data.filter(filter('Gat'));
         let filtered = data.filter(filter('MOR'));


let data = [
  {
    "guid": "a2906537-99b6-4b80-815c-ee1f37c24908",
    "title": "Dispatch 1",
    "details": "MORRETES",
    "type": "Gateway",
    "status": "Online",
    "stations": [
      {
        "guid": "373166df-cb88-4ace-8963-0e58835884eb",
        "title": "Dispatch 1-A",
        "details": "BASEA 11",
        "status": "Offline"
      },
      {
        "guid": "d1440f41-0664-4a29-bc71-fe45391f14a3",
        "title": "Dispatch 1-B",
        "details": "BASEA 21",
        "status": "Online"
      },
      {
        "guid": "ea3a7908-f6e5-4d0a-a975-7beba09267c7",
        "title": "Dispatch 1-C",
        "details": "BASEA 31",
        "status": "Online"
      }
    ]
  },
  {
    "guid": "358c631e-3f21-41e8-a488-6b4ea29ee1a0",
    "title": "Dispatch 2",
    "details": "PORTO-DE-GALINHAS",
    "type": "COBHAM",
    "status": "Offline",
    "stations": [
      {
        "guid": "aa3094a4-8fa8-4b58-a134-f01919be5647",
        "title": "Dispatch 2-A",
        "details": "BASEA 21",
        "status": "Online"
      },
      {
        "guid": "76ef202a-6772-444b-8fd7-ea967d68fb2e",
        "title": "Dispatch 2-B",
        "details": "BASEA 22",
        "status": "Offline"
      },
      {
        "guid": "93a10db8-ee89-4e1e-9011-654711b50584",
        "title": "Dispatch 2-C",
        "details": "BASEA 23",
        "status": "Offline"
      },
      {
        "guid": "2de048b7-2482-4086-930a-1f0a0df43600",
        "title": "Dispatch 2-D",
        "details": "BASEA 24",
        "status": "Online"
      }
    ]
  }
]

        */


        //var novabusca = data.filter(input);

        //if ( n[i] != $(this).parents('div.dataTables_filter')[0] )
        /*
        var posA = fieldsStatus[0];


        var novabusca = fieldsStatus.filter(function (item) {
            return groups.filter(el => status.toLowerCase().indexOf(status.toLowerCase()) > -1);
        })

        console.log(novabusca);

        const search = groups.filter(function (fields) {
            if ((status == 'On') || (status = 'On')) {
                return true;
            } else {
                return false;
            }
        });
        const filterItems = (query) => {
            return groups.filter(el => status.toLowerCase().indexOf(query.toLowerCase()) > -1);
        };
            

            function returnfilter(value) {
                return value = input;
            }
            var filtered = [groupDetails, status].filter(returnfilter);



   


            alert('search');*/
                      
}